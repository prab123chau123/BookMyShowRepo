name: PR Checks

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run Checkstyle
      run: mvn checkstyle:check
      continue-on-error: true
      
    - name: Run SpotBugs
      run: mvn spotbugs:check
      continue-on-error: true
      
    - name: Validate Code Format
      run: mvn fmt:check
      continue-on-error: true
      
    - name: Security Scan
      run: mvn org.owasp:dependency-check-maven:check
      continue-on-error: true
      
    - name: Comment PR
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'âœ… Code quality checks completed! Please ensure all tests pass before merging.'
          })

  size-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Check PR Size
      uses: actions/github-script@v6
      with:
        script: |
          const pr = context.payload.pull_request;
          const additions = pr.additions;
          const deletions = pr.deletions;
          const changes = additions + deletions;
          
          let label = '';
          let message = '';
          
          if (changes < 100) {
            label = 'size/small';
            message = 'ðŸŸ¢ Small PR - Easy to review!';
          } else if (changes < 500) {
            label = 'size/medium';
            message = 'ðŸŸ¡ Medium PR - Please ensure good test coverage.';
          } else {
            label = 'size/large';
            message = 'ðŸ”´ Large PR - Consider breaking into smaller PRs for easier review.';
          }
          
          // Add label
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr.number,
            labels: [label]
          });
          
          // Add comment
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr.number,
            body: `${message}\n\nðŸ“Š **PR Stats:**\n- Additions: ${additions}\n- Deletions: ${deletions}\n- Total changes: ${changes}`
          });

  auto-assign-reviewers:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    
    steps:
    - name: Auto-assign reviewers
      uses: actions/github-script@v6
      with:
        script: |
          const reviewers = ['prab123chau123']; // Replace with actual GitHub usernames
          const teams = ['backend-team']; // Replace with actual team names
          
          await github.rest.pulls.requestReviewers({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
            reviewers: reviewers,
            team_reviewers: teams
          });
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: `ðŸ‘‹ Thanks for the PR! I've automatically assigned reviewers: ${reviewers.map(r => `@${r}`).join(', ')}\n\nðŸ“‹ **Review Checklist:**\n- [ ] Code follows project standards\n- [ ] Tests are included and passing\n- [ ] Documentation is updated\n- [ ] No breaking changes or properly documented`
          });

  label-pr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Label PR based on files changed
      uses: actions/github-script@v6
      with:
        script: |
          const { data: files } = await github.rest.pulls.listFiles({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          const labels = [];
          
          const hasBackendChanges = files.some(file => 
            file.filename.includes('src/main/java') || 
            file.filename.includes('pom.xml') ||
            file.filename.includes('application.yml')
          );
          
          const hasFrontendChanges = files.some(file => 
            file.filename.includes('frontend/') ||
            file.filename.includes('package.json')
          );
          
          const hasTestChanges = files.some(file => 
            file.filename.includes('src/test/') ||
            file.filename.includes('.test.js')
          );
          
          const hasDocChanges = files.some(file => 
            file.filename.includes('README') ||
            file.filename.includes('.md')
          );
          
          if (hasBackendChanges) labels.push('backend');
          if (hasFrontendChanges) labels.push('frontend');
          if (hasTestChanges) labels.push('tests');
          if (hasDocChanges) labels.push('documentation');
          
          if (labels.length > 0) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: labels
            });
          }